{"version":3,"sources":["components/AddTodo.tsx","components/Layout.tsx","components/TodoListItem.tsx","components/TodoList.tsx","API.ts","graphql/queries.ts","graphql/mutations.ts","reducer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddTodo","onAdd","useState","title","setTitle","Paper","style","margin","padding","Grid","container","xs","md","item","paddingRight","TextField","fullWidth","color","placeholder","value","onChange","e","target","onKeyPress","key","Button","variant","disabled","onClick","Layout","memo","props","elevation","backgroundColor","AppBar","position","height","Toolbar","Typography","children","TodoListItem","todo","divider","onComplete","onUncomplete","onDelete","ListItem","Checkbox","checked","completed","disableRipple","id","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","TodoList","items","length","List","overflow","map","index","getTodos","variables","a","API","graphql","graphqlOperation","result","data","createTodo","deleteTodo","updateTodo","reducer","state","action","type","newTodos","payload","forEach","todos","existingTodo","updatedAt","newState","Amplify","configure","JSON","parse","process","App","useReducer","dispatch","loading","setLoading","error","setError","useEffect","then","Items","catch","errors","message","console","addTodo","response","LinearProgress","Object","keys","sort","b","createdAt","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","autoHideDuration","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87191445.chunk.js","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\nimport { Button, Grid, Paper, TextField } from \"@material-ui/core\";\n\nexport interface AddTodoProps {\n  onAdd: (title: string) => void;\n}\n\nexport const AddTodo: FunctionComponent<AddTodoProps> = ({ onAdd }) => {\n  const [title, setTitle] = useState(\"\");\n\n  return (\n    <Paper style={{ margin: 16, padding: 16 }}>\n      <Grid container>\n        <Grid xs={10} md={11} item style={{ paddingRight: 16 }}>\n          <TextField\n            fullWidth\n            color=\"primary\"\n            placeholder=\"Add new todo\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            onKeyPress={(e) => {\n              if (title && e.key === \"Enter\") {\n                onAdd(title);\n                setTitle(\"\");\n              }\n            }}\n          />\n        </Grid>\n        <Grid xs={2} md={1} item>\n          <Button\n            fullWidth\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={title === \"\"}\n            onClick={() => {\n              onAdd(title);\n              setTitle(\"\");\n            }}\n          >\n            Add\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n","import React, { memo } from \"react\";\nimport { AppBar, Toolbar, Typography, Paper } from \"@material-ui/core\";\nexport const Layout = memo((props) => (\n  <Paper\n    elevation={0}\n    style={{ padding: 0, margin: 0, backgroundColor: \"#fafafa\" }}\n  >\n    <AppBar color=\"primary\" position=\"static\" style={{ height: 64 }}>\n      <Toolbar style={{ height: 64 }}>\n        <Typography color=\"inherit\">TODOS</Typography>\n      </Toolbar>\n    </AppBar>\n    {props.children}\n  </Paper>\n));\n","import React, { FunctionComponent } from \"react\";\nimport {\n  ListItem,\n  Checkbox,\n  IconButton,\n  ListItemText,\n  ListItemSecondaryAction,\n} from \"@material-ui/core\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\nimport { Todo } from \"../APITypes\";\n\nexport interface TodoListItemProps {\n  todo: Todo;\n  divider: boolean;\n  onComplete?: (id: string) => void;\n  onUncomplete?: (id: string) => void;\n  onDelete?: (title: string) => void;\n}\n\nexport const TodoListItem: FunctionComponent<TodoListItemProps> = ({\n  todo,\n  divider,\n  onComplete,\n  onUncomplete,\n  onDelete,\n}) => {\n  return (\n    <ListItem divider={divider}>\n      <Checkbox\n        checked={todo.completed}\n        disableRipple\n        onClick={() => {\n          if (todo.id) {\n            if (todo.completed) {\n              if (onUncomplete) onUncomplete(todo.id);\n            } else {\n              if (onComplete) onComplete(todo.id);\n            }\n          }\n        }}\n      />\n      <ListItemText primary={todo.title} />\n      <ListItemSecondaryAction>\n        <IconButton\n          aria-label=\"Delete Todo\"\n          onClick={() => {\n            if (onDelete && todo.id) onDelete(todo.id);\n          }}\n        >\n          <DeleteOutlined />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { List, Paper } from \"@material-ui/core\";\nimport { TodoListItem } from \"./TodoListItem\";\nimport { Todo } from \"../APITypes\";\n\nexport interface TodoListProps {\n  items: Todo[];\n  onComplete?: (id: string) => void;\n  onUncomplete?: (id: string) => void;\n  onDelete?: (title: string) => void;\n}\n\nexport const TodoList: FunctionComponent<TodoListProps> = ({\n  items,\n  onComplete,\n  onUncomplete,\n  onDelete,\n}) => {\n  return (\n    <>\n      {items.length > 0 && (\n        <Paper style={{ margin: 16 }}>\n          <List style={{ overflow: \"scroll\" }}>\n            {items.map((todo, index) => (\n              <TodoListItem\n                todo={todo}\n                onComplete={onComplete}\n                onUncomplete={onUncomplete}\n                onDelete={onDelete}\n                key={todo.id}\n                divider={index !== items.length - 1}\n              />\n            ))}\n          </List>\n        </Paper>\n      )}\n    </>\n  );\n};\n","import API, { graphqlOperation, GraphQLResult } from \"@aws-amplify/api\";\nimport {\n  CreateTodoMutation,\n  CreateTodoMutationVariables,\n  DeleteTodoMutation,\n  DeleteTodoMutationVariables,\n  GetTodosQuery,\n  GetTodosQueryVariables,\n  Todo,\n  Todos,\n  UpdateTodoMutation,\n  UpdateTodoMutationVariables,\n} from \"./APITypes\";\n\nimport * as queries from \"./graphql/queries\";\nimport * as mutations from \"./graphql/mutations\";\n\nexport const getTodos = async (\n  variables: GetTodosQueryVariables\n): Promise<Todos | null | undefined> => {\n  const result = await (API.graphql(\n    graphqlOperation(queries.getTodos, variables)\n  ) as Promise<GraphQLResult<GetTodosQuery>>);\n  return result.data?.getTodos;\n};\n\nexport const createTodo = async (\n  variables: CreateTodoMutationVariables\n): Promise<Todo | null | undefined> => {\n  const result = await (API.graphql(\n    graphqlOperation(mutations.createTodo, variables)\n  ) as Promise<GraphQLResult<CreateTodoMutation>>);\n  return result.data?.createTodo;\n};\n\nexport const deleteTodo = async (\n  variables: DeleteTodoMutationVariables\n): Promise<Todo | null | undefined> => {\n  const result = await (API.graphql(\n    graphqlOperation(mutations.deleteTodo, variables)\n  ) as Promise<GraphQLResult<DeleteTodoMutation>>);\n  return result.data?.deleteTodo;\n};\n\nexport const updateTodo = async (\n  variables: UpdateTodoMutationVariables\n): Promise<Todo | null | undefined> => {\n  const result = await (API.graphql(\n    graphqlOperation(mutations.updateTodo, variables)\n  ) as Promise<GraphQLResult<UpdateTodoMutation>>);\n  return result.data?.updateTodo;\n};\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getTodo = /* GraphQL */ `\n  query GetTodo($id: ID!) {\n    getTodo(id: $id) {\n      id\n      title\n      completed\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const getTodos = /* GraphQL */ `\n  query GetTodos($limit: Int, $token: String) {\n    getTodos(limit: $limit, token: $token) {\n      Items {\n        id\n        title\n        completed\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createTodo = /* GraphQL */ `\n  mutation CreateTodo($title: String!) {\n    createTodo(title: $title) {\n      id\n      title\n      completed\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateTodo = /* GraphQL */ `\n  mutation UpdateTodo($id: ID!, $todo: UpdateTodoInput!) {\n    updateTodo(id: $id, todo: $todo) {\n      id\n      title\n      completed\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteTodo = /* GraphQL */ `\n  mutation DeleteTodo($id: ID!) {\n    deleteTodo(id: $id) {\n      id\n      title\n      completed\n      createdAt\n      updatedAt\n    }\n  }\n`;\n","import { Todo } from \"./APITypes\";\n\ntype State = { todos: { [key: string]: Todo } };\n\ntype Action =\n  | { type: \"SET\"; payload: Todo[] }\n  | { type: \"ADD\"; payload: Todo }\n  | { type: \"UPDATE\"; payload: Todo }\n  | { type: \"DELETE\"; payload: { id: string } };\n\nexport function reducer(state: State, action: Action): State {\n  if (action.type === \"SET\") {\n    const newTodos: { [key: string]: Todo } = {};\n    action.payload?.forEach((item: Todo) => {\n      if (item.id) newTodos[item.id] = item;\n    });\n    return { todos: newTodos };\n  }\n  if (action.type === \"ADD\") {\n    const todo: Todo = action.payload;\n    if (todo.id)\n      return {\n        todos: {\n          ...state.todos,\n          [todo.id]: todo,\n        },\n      };\n  }\n  if (action.type === \"UPDATE\") {\n    const todo: Todo = action.payload;\n    if (todo.id) {\n      const existingTodo = state.todos[todo.id];\n      if (\n        todo &&\n        todo.updatedAt &&\n        existingTodo &&\n        existingTodo.updatedAt &&\n        todo.updatedAt >= existingTodo.updatedAt\n      ) {\n        return {\n          todos: {\n            ...state.todos,\n            [todo.id]: todo,\n          },\n        };\n      }\n    }\n  }\n  if (action.type === \"DELETE\") {\n    const { id } = action.payload;\n    const newState = { ...state };\n    if (id) {\n      delete newState.todos[id];\n    }\n    return newState;\n  }\n  return state;\n}\n","import React, {\n  FunctionComponent,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\n\nimport \"./App.css\";\nimport { AddTodo } from \"./components/AddTodo\";\nimport { Layout } from \"./components/Layout\";\nimport { TodoList } from \"./components/TodoList\";\n\nimport Amplify from \"aws-amplify\";\nimport * as API from \"./API\";\nimport { reducer } from \"./reducer\";\nimport { LinearProgress, Snackbar } from \"@material-ui/core\";\n\nAmplify.configure(JSON.parse(process.env.REACT_APP_AWS_EXPORTS || \"\"));\n\nconst App: FunctionComponent<{}> = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    todos: {},\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    // Anything in here is fired on component mount.\n    API.getTodos({})\n      .then((result) => {\n        setLoading(false);\n        dispatch({\n          type: \"SET\",\n          payload: result?.Items || [],\n        });\n      })\n      .catch((error) => {\n        setLoading(false);\n        if (error && error.errors && error.errors[0]) {\n          setError(error.errors[0].message);\n        } else {\n          setError(\"Error happened\");\n        }\n        console.error(error);\n      });\n\n    return () => {\n      // Anything in here is fired on component unmount.\n      // console.log(\"B\");\n    };\n  }, []);\n\n  const addTodo = async (title: string) => {\n    try {\n      setLoading(true);\n      const response = await API.createTodo({\n        title,\n      });\n      if (response)\n        dispatch({\n          type: \"ADD\",\n          payload: response,\n        });\n    } catch (error) {\n      if (error && error.errors && error.errors[0]) {\n        setError(error.errors[0].message);\n      } else {\n        setError(\"Error happened\");\n      }\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteTodo = async (id: string) => {\n    const todo = { ...state.todos[id] };\n    try {\n      setLoading(true);\n      dispatch({\n        type: \"DELETE\",\n        payload: {\n          id,\n        },\n      });\n      await API.deleteTodo({\n        id,\n      });\n    } catch (error) {\n      if (error && error.errors && error.errors[0]) {\n        setError(error.errors[0].message);\n      } else {\n        setError(\"Error happened\");\n      }\n      console.error(error);\n      dispatch({\n        type: \"ADD\",\n        payload: todo,\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateTodo = async (id: string) => {\n    const todo = state.todos[id];\n    try {\n      setLoading(true);\n      dispatch({\n        type: \"UPDATE\",\n        payload: {\n          ...todo,\n          completed: !todo?.completed,\n        },\n      });\n      const response = await API.updateTodo({\n        id,\n        todo: {\n          completed: !todo?.completed,\n          title: todo?.title || \"\",\n        },\n      });\n      if (response)\n        dispatch({\n          type: \"UPDATE\",\n          payload: response,\n        });\n    } catch (error) {\n      if (error && error.errors && error.errors[0]) {\n        setError(error.errors[0].message);\n      } else {\n        setError(\"Error happened\");\n      }\n      console.error(error);\n      dispatch({\n        type: \"UPDATE\",\n        payload: todo,\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return (\n    <Layout>\n      {loading && <LinearProgress color=\"secondary\" />}\n      <AddTodo onAdd={addTodo}></AddTodo>\n      <TodoList\n        onComplete={updateTodo}\n        onUncomplete={updateTodo}\n        onDelete={deleteTodo}\n        items={Object.keys(state.todos)\n          .map((key) => state.todos[key])\n          .sort((a, b) => {\n            if (a.createdAt && b.createdAt) {\n              if (a.createdAt < b.createdAt) {\n                return 1;\n              }\n              if (a.createdAt > b.createdAt) {\n                return -1;\n              }\n            }\n            return 0;\n          })}\n      ></TodoList>\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        open={error !== \"\"}\n        message={error}\n        onClose={() => setError(\"\")}\n        autoHideDuration={6000}\n      />\n    </Layout>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}